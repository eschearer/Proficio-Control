function makemot
% makemot.m
%
% This program generates a set of MOT files for SIMM
%
version = '1.0';

folder = 'c:/Ton/projects/Moment_Arms/delp';	% this is where makemot.cfg is and where data files for this model will be stored
fullpath = [folder '/makemot.cfg'];
cfg = fopen(fullpath,'r');
if (cfg < 0) 
	fprintf('Error: could not open %s\n', fullpath);
end

token = gettoken(cfg);
while (strcmp(token, 'file'))
	filename = fscanf(cfg,'%s',1);
	dofnames = [];
	qspec = [];
	token = gettoken(cfg);
	while (strcmp(token, 'dof'))
		dofnames = strvcat(dofnames, fscanf(cfg,'%s',1));	% read name of dof
		qspec = [qspec; fscanf(cfg,'%f',3)'];				% read qmin, qmax, steps
	token = gettoken(cfg);
	end
	ndofs = size(dofnames,1);
	qmin = qspec(:,1);
	qmax = qspec(:,2);
	qsteps = qspec(:,3) + 1;		% number of steps is number of intervals plus 1
	qstep = (qmax-qmin)./(qsteps-1);
	nframes = prod(qsteps); 
	% write file header
	fullpath = [folder '/' filename '.mot'];
	mot = fopen(fullpath,'w');
	if (mot < 0) 
		fprintf('Error: could not open %s (%d frames)\n', fullpath, nframes);
	end
	fprintf(1,'Writing %s\n',fullpath);
	fprintf(mot,'/*\n');
	fprintf(mot,' *  MOTION FILE FOR PRESCRIBED MOVEMENT\n');
	fprintf(mot,' *  Generated by makemot.m version %s on %s\n', version, datestr(now));
    fprintf(mot,' *  This motion file must be used with a compatible SIMM joint (JNT) file.\n');
    fprintf(mot,' *\n');
    fprintf(mot,' */\n\n');

	fprintf(mot,'name %s\n', filename);
	fprintf(mot,'datacolumns %d\n', ndofs);
	fprintf(mot,'datarows %d			/* number of rows (timesteps) of motion data */\n', nframes);
	fprintf(mot,'range 0.0 %8.1f		/* range of movement cycle */\n', nframes);
	fprintf(mot,'keys g_key				/* press this key to animate the model */\n');
	fprintf(mot,'wrap					/* so the motion can be repeated */\n');
	fprintf(mot,'calc_derivatives 0.05	/* have SIMM calc joint velocities using timestep of 0.05 sec */\n');
	fprintf(mot,'endheader\n\n');
	
    fprintf(mot,'/*\n');
	fprintf(mot,' * The following labels must be identical to the DOF names in the SIMM model\n');
	fprintf(mot,' */\n\n');

	% write motion data
	ndofs = size(dofnames,1);
	for i=1:ndofs
		fprintf(mot,'%s ',strtrim(dofnames(i,:)));	% table header
	end
	fprintf(mot,'\n');
	q = qmin';			% initial q
	for i=1:nframes
		fprintf(mot,'%9.2f ',q);
		fprintf(mot,'\n');
		for k=ndofs:-1:1				% increment last DOF first
			q(k) = q(k) + qstep(k);
			if (q(k) < qmax(k)+0.001)
				break;			% end FOR loop because we did not exceed qmax for DOF k
			end
			q(k) = qmin(k);		% reset this DOF to qmin
		end
	end
    fclose(mot);
end
%====================================================================================================	
function [token] = gettoken(fid);
%
% reads a string from a file, ignores everything that follows # on a line
%
token = fscanf(fid,'%s',1);
if (numel(token) == 0)
  token = 'eof';
end
while (token(1) == '#')
	fgetl(fid);
	token = fscanf(fid,'%s',1);
	if (numel(token) == 0)
		token = 'eof';
	end
end